version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.2-apache-stretch-node-browsers
        environment:
          DB_PORT: 3306
          DB_HOST: 127.0.0.1

      - image: mysql:8.0
        command: --default-authentication-plugin=mysql_native_password
        ports:
          - "3306:3306"
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_HOST: 127.0.0.1
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_HOST: 127.0.0.1
          MYSQL_DATABASE: test_db

      - image: circleci/redis:5.0.3
        hostname: redis
        environment:
          ALLOW_EMPTY_PASSWORD: yes
          REDIS_EXTRA_FLAGS: --maxmemory 200mb
        ports:
          - "6379:6379"
        command: ["redis-server", "--appendonly", "yes"]

    working_directory: ~/app

    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: |
            dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Wait for redis
          command: |
            dockerize -wait tcp://localhost:6379 -timeout 1m
      - run:
          name: Install server
          command: |
            sudo apt-get update
            sudo apt-get install -y libzip-dev
            sudo apt-get install -y zlib1g-dev libicu-dev g++
      - run:
          name: Install PHP exts
          command: |
            sudo docker-php-ext-install zip
            sudo docker-php-ext-configure intl
            sudo docker-php-ext-install intl
            sudo docker-php-ext-install pdo_mysql
      - restore_cache:
          name: Restore composer cache
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
      - run: composer install --dev --ignore-platform-reqs
      - save_cache:
          name: Save composer cache
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      #      - run:
      #          name: Start code sniffer
      #          command: |
      #            php vendor/bin/phpcs --standard=$PSR ./app
      #          environment:
      #              PSR: psr2
      - run:
          name: Start migrations
          command: |
            cp .env.testing.example .env
            php artisan key:generate
            php artisan migrate
#      - run:
#          name: Start tests
#          command: