version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.2-apache-stretch-node-browsers
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_HOST: 127.0.0.1
          MYSQL_ALLOW_EMPTY_PASSWORD: true

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4

    working_directory: ~/laravel

    steps:
      - checkout
      - run:
          name: Install server
          command: |
            sudo apt-get update
            sudo apt-get install -y libzip-dev
            sudo apt-get install -y zlib1g-dev libicu-dev g++
            sudo apt-get install mysql-client
            sudo apt-get -y install mysql-server
      - run:
          name: Install PHP exts
          command: |
            sudo docker-php-ext-install zip
            sudo docker-php-ext-configure intl
            sudo docker-php-ext-install intl
            sudo docker-php-ext-install pdo_mysql
      - run:
          name: Fix MySQL socket config
          command: |
            sudo sh -c "echo 'pdo_mysql.default_socket=/var/run/mysqld/mysqld.sock' > /usr/local/etc/php/conf.d/pdo.ini"
      - run:
          name: Start database server
          command: |
            sudo service mysql start
            sleep 2
            ps aux | grep mysql
      - run:
          name: Create non-admin user
          command: |
            sudo mysql -u root -e "CREATE user test_user IDENTIFIED BY 'password';"
            sudo mysql -u root -e "CREATE database test_db;"
      - run: sudo composer self-update
      - restore_cache:
         keys:
           - composer-v1-{{ checksum "composer.lock" }}
           - composer-v1-
      - run: composer install --dev --ignore-platform-reqs
      - save_cache:
         key: composer-v1-{{ checksum "composer.lock" }}
         paths:
           - vendor
      - run:
          name: Start migrations
          command: |
            cp .env.testing.example .env
            php artisan key:generate
            php artisan migrate