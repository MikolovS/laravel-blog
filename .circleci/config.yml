version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.2-apache-stretch-node-browsers
        environment:
          DB_PORT: 3306
          DB_HOST: 127.0.0.1

      - image: circleci/mysql
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_HOST: 127.0.0.1
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_HOST: 127.0.0.1
          MYSQL_DB: test_db

    working_directory: ~/laravel

    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Install server
          command: |
            sudo apt-get update
            sudo apt-get install -y libzip-dev
            sudo apt-get install -y zlib1g-dev libicu-dev g++
            sudo apt-get install mysql-client
            sudo apt-get -y install mysql-server
      - run:
          name: Install PHP exts
          command: |
            sudo docker-php-ext-install zip
            sudo docker-php-ext-configure intl
            sudo docker-php-ext-install intl
            sudo docker-php-ext-install pdo_mysql
#      - run:
#          name: Fix MySQL socket config
#          command: |
#            sudo sh -c "echo 'pdo_mysql.default_socket=/var/run/mysqld/mysqld.sock' > /usr/local/etc/php/conf.d/pdo.ini"
#      - run:
#          name: Start database server
#          command: |
#            sudo service mysql start
#            sleep 2
#            ps aux | grep mysql
#      - run:
#          name: Create non-admin user
#          command: |
#            sudo mysql -u root -e "CREATE database test_db;"
#            sudo mysql -u root -e "GRANT ALL PRIVILEGES ON *.* TO 'test_user'@'localhost' IDENTIFIED BY 'password';"
#      - run: sudo composer self-update
      - restore_cache:
         keys:
           - composer-v1-{{ checksum "composer.lock" }}
           - composer-v1-
      - run: composer install --dev --ignore-platform-reqs
      - save_cache:
         key: composer-v1-{{ checksum "composer.lock" }}
         paths:
           - vendor
      - run:
          name: Start migrations
          command: |
            cp .env.testing.example .env
            php artisan key:generate
            php artisan migrate